# HÃœSNA AYSU KAYA 2521706

.pos 0x0
init:
    irmovq stack, %rsp
    irmovq $6, %rdx
    irmovq array_begin, %rdi
    irmovq array_end, %rsi
    call binary_search
    halt

#implement your code below (DO NOT CHANGE/REMOVE THIS COMMENT)

binary_search:
    irmovq $1, %r14
    irmovq $8, %r9
    irmovq $16, %r8
    rrmovq %rdi, %r10       #r10: begin
    subq %rsi, %r10         #r10: begin - end
    jge if                  #if begin >= end return -1
    rrmovq %rsi, %rcx       #rcx: end
    subq %rdi, %rcx         #rcx: end - begin
    dvvq %r8, %rcx
    mllq %r9, %rcx          #rcx: (end - begin) >> 1
    addq %rdi, %rcx         #rcx: mid
    mrmovq (%rcx), %r11     #r11: *mid
    subq %rdx, %r11         #r11: *mid - value
    je elseif
    jl elseif2
    jg else

if:
    irmovq $-1, %rax
    ret

elseif:
    rrmovq %rcx, %rax       #rax: mid
    subq %rdi, %rax         #rax: mid - begin
    addq %r9, %rax          #rax: mid - begin + 1
    dvvq %r9, %rax  
    ret

elseif2:
    pushq %rdi
    pushq %rsi
    pushq %rcx
    rrmovq %rcx, %rdi       #begin = mid
    addq %r9, %rdi          #begin = mid + 1
    call binary_search
    popq %rcx
    popq %rsi
    popq %rdi
    rrmovq %rax, %rbx       #rbx = tmp
    irmovq $-1, %r12
    rrmovq %rbx, %r13
    subq %r12, %r13         #tmp - (-1)
    je elseinelseif
    jmp ifinelseif      


ifinelseif:
    rrmovq %rcx, %rax       #rax: mid
    subq %rdi, %rax         #rax: mid - begin
    mllq %r9, %rbx
    addq %rbx, %rax         #rax: tmp + (mid - begin)
    addq %r9, %rax          #rax: tmp + (mid - begin) + 1
    dvvq %r9, %rax
    ret


elseinelseif:
    rrmovq %rbx, %rax
    ret


else:
    pushq %rdi
    pushq %rsi
    pushq %rcx
    rrmovq %rcx, %rsi       #end = mid
    call binary_search
    popq %rcx
    popq %rsi
    popq %rdi
    ret




#implement your code above (DO NOT CHANGE/REMOVE THIS COMMENT)

.pos 0x1008
array_begin:
    .quad 1
    .quad 2
    .quad 3
    .quad 5
    .quad 6
    .quad 7
    .quad 9
    .quad 11
array_end:
    .quad 0
.pos 0x1F00
stack:
    .quad 0


