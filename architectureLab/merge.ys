# HÃœSNA AYSU KAYA 2521706

.pos 0x0
init:
    irmovq stack, %rsp
    irmovq array_begin1, %rdi
    irmovq array_end1, %rsi
    irmovq array_begin2, %rdx
    irmovq array_end2, %rcx
    irmovq array_begin3, %r8
    call merge
    halt

#implement your code below (DO NOT CHANGE/REMOVE THIS COMMENT)

merge:                #rdi:begin1   rsi:end1    rdx:begin2   rcx:end2    r8:begin3
    irmovq $8, %rbx
    jmp while1      

    
while1:
    jmp cond1


cond1:
    rrmovq %rsi, %r9        #r9: end1
    subq %rdi, %r9          #end1 - begin1
    jg cond2
    jle while3


cond2:
    rrmovq %rcx, %r10       #r10: end2
    subq %rdx, %r10         #end2 - begin2
    jle while2
    mrmovq (%rdi), %r11     #r11: *begin1
    mrmovq (%rdx), %r12     #r12: *begin2
    subq %r11, %r12         #*begin2 - *begin1
    jg if
    jle else


if:
    mrmovq (%rdi), %r13     #r13 = *begin1
    rmmovq %r13, (%r8)      #*begin3 = *begin1
    addq %rbx, %r8          #begin3++
    addq %rbx, %rdi         #begin1++
    jmp while1


else:
    mrmovq (%rdx), %r13     #r13 = *begin2
    rmmovq %r13, (%r8)      #*begin3 = *begin2
    addq %rbx, %r8          #begin3++
    addq %rbx, %rdx         #begin2++
    jmp while1


while2:
    rrmovq %rsi, %r9        #r9: end1
    subq %rdi, %r9          #end1 - begin1
    jle while3
    mrmovq (%rdi), %r13     #r13 = *begin1
    rmmovq %r13, (%r8)      #*begin3 = *begin1
    addq %rbx, %r8          #begin3++
    addq %rbx, %rdi         #begin1++
    jmp while2


while3:
    rrmovq %rcx, %r10       #r10: end2
    subq %rdx, %r10         #end2 - begin2
    jle return
    mrmovq (%rdx), %r13     #r13 = *begin2
    rmmovq %r13, (%r8)      #*begin3 = *begin2
    addq %rbx, %r8          #begin3++
    addq %rbx, %rdx         #begin2++
    jmp while3

return:
    ret



#implement your code above (DO NOT CHANGE/REMOVE THIS COMMENT)

.pos 0x1008
array_begin1:
    .quad 1
    .quad 2
    .quad 3
    .quad 5
    .quad 17
    .quad 18
    .quad 19
    .quad 110
array_end1:
    .quad 0
array_begin2:
    .quad 10
    .quad 11
    .quad 12
    .quad 200
    .quad 201
    .quad 202
    .quad 203
    .quad 204
array_end2:
    .quad 0
.pos 0x1500
array_begin3:
    .quad 0
.pos 0x1F00
stack:
    .quad 0


